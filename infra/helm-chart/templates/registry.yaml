---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: {{ .Values.namespace }}
spec:
  serviceName: "registry"
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      {{- with .Values.registry.spec }}
      {{- toYaml . | nindent 6}}
      {{- end }}
      containers:
      - name: registry
        image: registry:2
        ports:
        - containerPort: 5000
          name: web
        volumeMounts:
        - name: registry-drive
          mountPath: /var/lib/registry
  volumeClaimTemplates:
  - metadata:
      name: registry-drive
    spec:
      storageClassName: {{ .Values.storage.className }}
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: registry-svc
  namespace: {{ .Values.namespace }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: 80
      targetPort: web
      protocol: TCP
  selector:
    app: registry
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: registry-svc
  namespace: {{ .Values.namespace }}
spec:
  entryPoints:
    - websecure
    - web
  routes:
    - match: Host(`{{ .Values.registry.hostname }}`)
      kind: Rule
      services:
        - namespace: {{ .Values.namespace }}
          name: registry-svc
          port: 80
  tls:
    secretName: registry-tls
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: registry-ca
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: registry-ca
spec:
  selector:
    matchLabels:
      name: registry-ca
  template:
    metadata:
      labels:
        name: registry-ca
    spec:
      containers:
      - name: registry-ca
        image: busybox
        command: [ 'sh' ]
        args: [ '-c', 'cp -r /home/certs/tls.crt /etc/docker/certs.d/{{ .Values.registry.hostname }}/ca.crt && exec tail -f /dev/null' ]
        volumeMounts:
        - name: etc-docker
          mountPath: /etc/docker/certs.d/{{ .Values.registry.hostname }}
        - name: ca-cert
          mountPath: /home/certs
      terminationGracePeriodSeconds: 30
      volumes:
      - name: etc-docker
        hostPath:
          path: /etc/docker/certs.d/{{ .Values.registry.hostname }}
      - name: ca-cert
        secret:
          secretName: registry-tls
